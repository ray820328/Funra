<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="15.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="MinSizeRel|x64">
      <Configuration>MinSizeRel</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="RelWithDebInfo|x64">
      <Configuration>RelWithDebInfo</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <ProjectGuid>{7CD3528E-446A-3CF3-9C3A-E977A33619EB}</ProjectGuid>
    <WindowsTargetPlatformVersion>10.0.17763.0</WindowsTargetPlatformVersion>
    <Keyword>Win32Proj</Keyword>
    <Platform>x64</Platform>
    <ProjectName>ZERO_CHECK</ProjectName>
    <VCProjectUpgraderObjectName>NoUpgrade</VCProjectUpgraderObjectName>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
    <ConfigurationType>Utility</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v141</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
    <ConfigurationType>Utility</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v141</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'" Label="Configuration">
    <ConfigurationType>Utility</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v141</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'" Label="Configuration">
    <ConfigurationType>Utility</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v141</PlatformToolset>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
  </ImportGroup>
  <ImportGroup Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup>
    <_ProjectFileVersion>10.0.20506.1</_ProjectFileVersion>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='Release|x64'">$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
  </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <Midl>
      <AdditionalIncludeDirectories>%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <Midl>
      <AdditionalIncludeDirectories>%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">
    <Midl>
      <AdditionalIncludeDirectories>%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">
    <Midl>
      <AdditionalIncludeDirectories>%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
  </ItemDefinitionGroup>
  <ItemGroup>
    <CustomBuild Include="E:\workspace\funra\proj\vs2017\3rd\CMakeFiles\2fb5f0f32b10b147786cc3fce07cc727\generate.stamp.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Checking Build System</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
D:\tools\CMake\bin\cmake.exe -SE:/workspace/funra/source/3rd -BE:/workspace/funra/proj/vs2017/3rd --check-stamp-list CMakeFiles/generate.stamp.list --vs-solution-file E:/workspace/funra/proj/vs2017/3rd/3rd.sln
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:/workspace/funra/proj/vs2017/3rd/CMakeFiles/2fb5f0f32b10b147786cc3fce07cc727/generate.stamp.rule;D:\tools\CMake\share\cmake-3.13\Modules\BasicConfigVersion-AnyNewerVersion.cmake.in;D:\tools\CMake\share\cmake-3.13\Modules\CMakeCInformation.cmake;D:\tools\CMake\share\cmake-3.13\Modules\CMakeCXXInformation.cmake;D:\tools\CMake\share\cmake-3.13\Modules\CMakeCheckCompilerFlagCommonPatterns.cmake;D:\tools\CMake\share\cmake-3.13\Modules\CMakeCommonLanguageInclude.cmake;D:\tools\CMake\share\cmake-3.13\Modules\CMakeDependentOption.cmake;D:\tools\CMake\share\cmake-3.13\Modules\CMakeGenericSystem.cmake;D:\tools\CMake\share\cmake-3.13\Modules\CMakeInitializeConfigs.cmake;D:\tools\CMake\share\cmake-3.13\Modules\CMakeLanguageInformation.cmake;D:\tools\CMake\share\cmake-3.13\Modules\CMakePackageConfigHelpers.cmake;D:\tools\CMake\share\cmake-3.13\Modules\CMakeRCInformation.cmake;D:\tools\CMake\share\cmake-3.13\Modules\CMakeSystemSpecificInformation.cmake;D:\tools\CMake\share\cmake-3.13\Modules\CMakeSystemSpecificInitialize.cmake;D:\tools\CMake\share\cmake-3.13\Modules\CPack.cmake;D:\tools\CMake\share\cmake-3.13\Modules\CPackComponent.cmake;D:\tools\CMake\share\cmake-3.13\Modules\CTest.cmake;D:\tools\CMake\share\cmake-3.13\Modules\CTestTargets.cmake;D:\tools\CMake\share\cmake-3.13\Modules\CTestUseLaunchers.cmake;D:\tools\CMake\share\cmake-3.13\Modules\CheckCCompilerFlag.cmake;D:\tools\CMake\share\cmake-3.13\Modules\CheckCSourceCompiles.cmake;D:\tools\CMake\share\cmake-3.13\Modules\CheckCXXSourceCompiles.cmake;D:\tools\CMake\share\cmake-3.13\Modules\CheckFunctionExists.cmake;D:\tools\CMake\share\cmake-3.13\Modules\CheckIncludeFile.cmake;D:\tools\CMake\share\cmake-3.13\Modules\CheckIncludeFileCXX.cmake;D:\tools\CMake\share\cmake-3.13\Modules\CheckLibraryExists.cmake;D:\tools\CMake\share\cmake-3.13\Modules\CheckStructHasMember.cmake;D:\tools\CMake\share\cmake-3.13\Modules\CheckSymbolExists.cmake;D:\tools\CMake\share\cmake-3.13\Modules\CheckTypeSize.cmake;D:\tools\CMake\share\cmake-3.13\Modules\Compiler\CMakeCommonCompilerMacros.cmake;D:\tools\CMake\share\cmake-3.13\Modules\Compiler\MSVC-C.cmake;D:\tools\CMake\share\cmake-3.13\Modules\Compiler\MSVC-CXX.cmake;D:\tools\CMake\share\cmake-3.13\Modules\DartConfiguration.tcl.in;D:\tools\CMake\share\cmake-3.13\Modules\FindDoxygen.cmake;D:\tools\CMake\share\cmake-3.13\Modules\FindPackageHandleStandardArgs.cmake;D:\tools\CMake\share\cmake-3.13\Modules\FindPackageMessage.cmake;D:\tools\CMake\share\cmake-3.13\Modules\GNUInstallDirs.cmake;D:\tools\CMake\share\cmake-3.13\Modules\Platform\Windows-MSVC-C.cmake;D:\tools\CMake\share\cmake-3.13\Modules\Platform\Windows-MSVC-CXX.cmake;D:\tools\CMake\share\cmake-3.13\Modules\Platform\Windows-MSVC.cmake;D:\tools\CMake\share\cmake-3.13\Modules\Platform\Windows.cmake;D:\tools\CMake\share\cmake-3.13\Modules\Platform\WindowsPaths.cmake;D:\tools\CMake\share\cmake-3.13\Modules\TestBigEndian.cmake;D:\tools\CMake\share\cmake-3.13\Modules\WriteBasicConfigVersionFile.cmake;D:\tools\CMake\share\cmake-3.13\Templates\CPackConfig.cmake.in;E:\workspace\funra\proj\vs2017\3rd\CMakeFiles\3.13.4\CMakeCCompiler.cmake;E:\workspace\funra\proj\vs2017\3rd\CMakeFiles\3.13.4\CMakeCXXCompiler.cmake;E:\workspace\funra\proj\vs2017\3rd\CMakeFiles\3.13.4\CMakeRCCompiler.cmake;E:\workspace\funra\proj\vs2017\3rd\CMakeFiles\3.13.4\CMakeSystem.cmake;E:\workspace\funra\source\3rd\CMakeLists.txt;E:\workspace\funra\source\3rd\cmocka\CMakeLists.txt;E:\workspace\funra\source\3rd\cmocka\CPackConfig.cmake;E:\workspace\funra\source\3rd\cmocka\CTestConfig.cmake;E:\workspace\funra\source\3rd\cmocka\CompilerChecks.cmake;E:\workspace\funra\source\3rd\cmocka\ConfigureChecks.cmake;E:\workspace\funra\source\3rd\cmocka\DefineOptions.cmake;E:\workspace\funra\source\3rd\cmocka\cmake\Modules\AddCCompilerFlag.cmake;E:\workspace\funra\source\3rd\cmocka\cmake\Modules\AddCMockaTest.cmake;E:\workspace\funra\source\3rd\cmocka\cmake\Modules\CheckCCompilerFlagSSP.cmake;E:\workspace\funra\source\3rd\cmocka\cmake\Modules\DefineCMakeDefaults.cmake;E:\workspace\funra\source\3rd\cmocka\cmake\Modules\DefineCompilerFlags.cmake;E:\workspace\funra\source\3rd\cmocka\cmake\Modules\DefinePlatformDefaults.cmake;E:\workspace\funra\source\3rd\cmocka\cmake\Modules\FindNSIS.cmake;E:\workspace\funra\source\3rd\cmocka\cmake\Modules\MacroEnsureOutOfSourceBuild.cmake;E:\workspace\funra\source\3rd\cmocka\cmocka.pc.cmake;E:\workspace\funra\source\3rd\cmocka\config.h.cmake;E:\workspace\funra\source\3rd\cmocka\doc\CMakeLists.txt;E:\workspace\funra\source\3rd\cmocka\example\CMakeLists.txt;E:\workspace\funra\source\3rd\cmocka\include\CMakeLists.txt;E:\workspace\funra\source\3rd\cmocka\src\CMakeLists.txt;E:\workspace\funra\source\3rd\libuv\1.42.0\CMakeLists.txt;E:\workspace\funra\source\3rd\lua\5.4.3\CMakeLists.txt;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\workspace\funra\proj\vs2017\3rd\CMakeFiles\generate.stamp;E:\workspace\funra\proj\vs2017\3rd\libuv\1.42.0\CMakeFiles\generate.stamp;E:\workspace\funra\proj\vs2017\3rd\lua\5.4.3\CMakeFiles\generate.stamp;E:\workspace\funra\proj\vs2017\3rd\cmocka\CMakeFiles\generate.stamp;E:\workspace\funra\proj\vs2017\3rd\cmocka\include\CMakeFiles\generate.stamp;E:\workspace\funra\proj\vs2017\3rd\cmocka\src\CMakeFiles\generate.stamp;E:\workspace\funra\proj\vs2017\3rd\cmocka\doc\CMakeFiles\generate.stamp;E:\workspace\funra\proj\vs2017\3rd\cmocka\example\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Checking Build System</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
D:\tools\CMake\bin\cmake.exe -SE:/workspace/funra/source/3rd -BE:/workspace/funra/proj/vs2017/3rd --check-stamp-list CMakeFiles/generate.stamp.list --vs-solution-file E:/workspace/funra/proj/vs2017/3rd/3rd.sln
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:/workspace/funra/proj/vs2017/3rd/CMakeFiles/2fb5f0f32b10b147786cc3fce07cc727/generate.stamp.rule;D:\tools\CMake\share\cmake-3.13\Modules\BasicConfigVersion-AnyNewerVersion.cmake.in;D:\tools\CMake\share\cmake-3.13\Modules\CMakeCInformation.cmake;D:\tools\CMake\share\cmake-3.13\Modules\CMakeCXXInformation.cmake;D:\tools\CMake\share\cmake-3.13\Modules\CMakeCheckCompilerFlagCommonPatterns.cmake;D:\tools\CMake\share\cmake-3.13\Modules\CMakeCommonLanguageInclude.cmake;D:\tools\CMake\share\cmake-3.13\Modules\CMakeDependentOption.cmake;D:\tools\CMake\share\cmake-3.13\Modules\CMakeGenericSystem.cmake;D:\tools\CMake\share\cmake-3.13\Modules\CMakeInitializeConfigs.cmake;D:\tools\CMake\share\cmake-3.13\Modules\CMakeLanguageInformation.cmake;D:\tools\CMake\share\cmake-3.13\Modules\CMakePackageConfigHelpers.cmake;D:\tools\CMake\share\cmake-3.13\Modules\CMakeRCInformation.cmake;D:\tools\CMake\share\cmake-3.13\Modules\CMakeSystemSpecificInformation.cmake;D:\tools\CMake\share\cmake-3.13\Modules\CMakeSystemSpecificInitialize.cmake;D:\tools\CMake\share\cmake-3.13\Modules\CPack.cmake;D:\tools\CMake\share\cmake-3.13\Modules\CPackComponent.cmake;D:\tools\CMake\share\cmake-3.13\Modules\CTest.cmake;D:\tools\CMake\share\cmake-3.13\Modules\CTestTargets.cmake;D:\tools\CMake\share\cmake-3.13\Modules\CTestUseLaunchers.cmake;D:\tools\CMake\share\cmake-3.13\Modules\CheckCCompilerFlag.cmake;D:\tools\CMake\share\cmake-3.13\Modules\CheckCSourceCompiles.cmake;D:\tools\CMake\share\cmake-3.13\Modules\CheckCXXSourceCompiles.cmake;D:\tools\CMake\share\cmake-3.13\Modules\CheckFunctionExists.cmake;D:\tools\CMake\share\cmake-3.13\Modules\CheckIncludeFile.cmake;D:\tools\CMake\share\cmake-3.13\Modules\CheckIncludeFileCXX.cmake;D:\tools\CMake\share\cmake-3.13\Modules\CheckLibraryExists.cmake;D:\tools\CMake\share\cmake-3.13\Modules\CheckStructHasMember.cmake;D:\tools\CMake\share\cmake-3.13\Modules\CheckSymbolExists.cmake;D:\tools\CMake\share\cmake-3.13\Modules\CheckTypeSize.cmake;D:\tools\CMake\share\cmake-3.13\Modules\Compiler\CMakeCommonCompilerMacros.cmake;D:\tools\CMake\share\cmake-3.13\Modules\Compiler\MSVC-C.cmake;D:\tools\CMake\share\cmake-3.13\Modules\Compiler\MSVC-CXX.cmake;D:\tools\CMake\share\cmake-3.13\Modules\DartConfiguration.tcl.in;D:\tools\CMake\share\cmake-3.13\Modules\FindDoxygen.cmake;D:\tools\CMake\share\cmake-3.13\Modules\FindPackageHandleStandardArgs.cmake;D:\tools\CMake\share\cmake-3.13\Modules\FindPackageMessage.cmake;D:\tools\CMake\share\cmake-3.13\Modules\GNUInstallDirs.cmake;D:\tools\CMake\share\cmake-3.13\Modules\Platform\Windows-MSVC-C.cmake;D:\tools\CMake\share\cmake-3.13\Modules\Platform\Windows-MSVC-CXX.cmake;D:\tools\CMake\share\cmake-3.13\Modules\Platform\Windows-MSVC.cmake;D:\tools\CMake\share\cmake-3.13\Modules\Platform\Windows.cmake;D:\tools\CMake\share\cmake-3.13\Modules\Platform\WindowsPaths.cmake;D:\tools\CMake\share\cmake-3.13\Modules\TestBigEndian.cmake;D:\tools\CMake\share\cmake-3.13\Modules\WriteBasicConfigVersionFile.cmake;D:\tools\CMake\share\cmake-3.13\Templates\CPackConfig.cmake.in;E:\workspace\funra\proj\vs2017\3rd\CMakeFiles\3.13.4\CMakeCCompiler.cmake;E:\workspace\funra\proj\vs2017\3rd\CMakeFiles\3.13.4\CMakeCXXCompiler.cmake;E:\workspace\funra\proj\vs2017\3rd\CMakeFiles\3.13.4\CMakeRCCompiler.cmake;E:\workspace\funra\proj\vs2017\3rd\CMakeFiles\3.13.4\CMakeSystem.cmake;E:\workspace\funra\source\3rd\CMakeLists.txt;E:\workspace\funra\source\3rd\cmocka\CMakeLists.txt;E:\workspace\funra\source\3rd\cmocka\CPackConfig.cmake;E:\workspace\funra\source\3rd\cmocka\CTestConfig.cmake;E:\workspace\funra\source\3rd\cmocka\CompilerChecks.cmake;E:\workspace\funra\source\3rd\cmocka\ConfigureChecks.cmake;E:\workspace\funra\source\3rd\cmocka\DefineOptions.cmake;E:\workspace\funra\source\3rd\cmocka\cmake\Modules\AddCCompilerFlag.cmake;E:\workspace\funra\source\3rd\cmocka\cmake\Modules\AddCMockaTest.cmake;E:\workspace\funra\source\3rd\cmocka\cmake\Modules\CheckCCompilerFlagSSP.cmake;E:\workspace\funra\source\3rd\cmocka\cmake\Modules\DefineCMakeDefaults.cmake;E:\workspace\funra\source\3rd\cmocka\cmake\Modules\DefineCompilerFlags.cmake;E:\workspace\funra\source\3rd\cmocka\cmake\Modules\DefinePlatformDefaults.cmake;E:\workspace\funra\source\3rd\cmocka\cmake\Modules\FindNSIS.cmake;E:\workspace\funra\source\3rd\cmocka\cmake\Modules\MacroEnsureOutOfSourceBuild.cmake;E:\workspace\funra\source\3rd\cmocka\cmocka.pc.cmake;E:\workspace\funra\source\3rd\cmocka\config.h.cmake;E:\workspace\funra\source\3rd\cmocka\doc\CMakeLists.txt;E:\workspace\funra\source\3rd\cmocka\example\CMakeLists.txt;E:\workspace\funra\source\3rd\cmocka\include\CMakeLists.txt;E:\workspace\funra\source\3rd\cmocka\src\CMakeLists.txt;E:\workspace\funra\source\3rd\libuv\1.42.0\CMakeLists.txt;E:\workspace\funra\source\3rd\lua\5.4.3\CMakeLists.txt;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\workspace\funra\proj\vs2017\3rd\CMakeFiles\generate.stamp;E:\workspace\funra\proj\vs2017\3rd\libuv\1.42.0\CMakeFiles\generate.stamp;E:\workspace\funra\proj\vs2017\3rd\lua\5.4.3\CMakeFiles\generate.stamp;E:\workspace\funra\proj\vs2017\3rd\cmocka\CMakeFiles\generate.stamp;E:\workspace\funra\proj\vs2017\3rd\cmocka\include\CMakeFiles\generate.stamp;E:\workspace\funra\proj\vs2017\3rd\cmocka\src\CMakeFiles\generate.stamp;E:\workspace\funra\proj\vs2017\3rd\cmocka\doc\CMakeFiles\generate.stamp;E:\workspace\funra\proj\vs2017\3rd\cmocka\example\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Checking Build System</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
D:\tools\CMake\bin\cmake.exe -SE:/workspace/funra/source/3rd -BE:/workspace/funra/proj/vs2017/3rd --check-stamp-list CMakeFiles/generate.stamp.list --vs-solution-file E:/workspace/funra/proj/vs2017/3rd/3rd.sln
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:/workspace/funra/proj/vs2017/3rd/CMakeFiles/2fb5f0f32b10b147786cc3fce07cc727/generate.stamp.rule;D:\tools\CMake\share\cmake-3.13\Modules\BasicConfigVersion-AnyNewerVersion.cmake.in;D:\tools\CMake\share\cmake-3.13\Modules\CMakeCInformation.cmake;D:\tools\CMake\share\cmake-3.13\Modules\CMakeCXXInformation.cmake;D:\tools\CMake\share\cmake-3.13\Modules\CMakeCheckCompilerFlagCommonPatterns.cmake;D:\tools\CMake\share\cmake-3.13\Modules\CMakeCommonLanguageInclude.cmake;D:\tools\CMake\share\cmake-3.13\Modules\CMakeDependentOption.cmake;D:\tools\CMake\share\cmake-3.13\Modules\CMakeGenericSystem.cmake;D:\tools\CMake\share\cmake-3.13\Modules\CMakeInitializeConfigs.cmake;D:\tools\CMake\share\cmake-3.13\Modules\CMakeLanguageInformation.cmake;D:\tools\CMake\share\cmake-3.13\Modules\CMakePackageConfigHelpers.cmake;D:\tools\CMake\share\cmake-3.13\Modules\CMakeRCInformation.cmake;D:\tools\CMake\share\cmake-3.13\Modules\CMakeSystemSpecificInformation.cmake;D:\tools\CMake\share\cmake-3.13\Modules\CMakeSystemSpecificInitialize.cmake;D:\tools\CMake\share\cmake-3.13\Modules\CPack.cmake;D:\tools\CMake\share\cmake-3.13\Modules\CPackComponent.cmake;D:\tools\CMake\share\cmake-3.13\Modules\CTest.cmake;D:\tools\CMake\share\cmake-3.13\Modules\CTestTargets.cmake;D:\tools\CMake\share\cmake-3.13\Modules\CTestUseLaunchers.cmake;D:\tools\CMake\share\cmake-3.13\Modules\CheckCCompilerFlag.cmake;D:\tools\CMake\share\cmake-3.13\Modules\CheckCSourceCompiles.cmake;D:\tools\CMake\share\cmake-3.13\Modules\CheckCXXSourceCompiles.cmake;D:\tools\CMake\share\cmake-3.13\Modules\CheckFunctionExists.cmake;D:\tools\CMake\share\cmake-3.13\Modules\CheckIncludeFile.cmake;D:\tools\CMake\share\cmake-3.13\Modules\CheckIncludeFileCXX.cmake;D:\tools\CMake\share\cmake-3.13\Modules\CheckLibraryExists.cmake;D:\tools\CMake\share\cmake-3.13\Modules\CheckStructHasMember.cmake;D:\tools\CMake\share\cmake-3.13\Modules\CheckSymbolExists.cmake;D:\tools\CMake\share\cmake-3.13\Modules\CheckTypeSize.cmake;D:\tools\CMake\share\cmake-3.13\Modules\Compiler\CMakeCommonCompilerMacros.cmake;D:\tools\CMake\share\cmake-3.13\Modules\Compiler\MSVC-C.cmake;D:\tools\CMake\share\cmake-3.13\Modules\Compiler\MSVC-CXX.cmake;D:\tools\CMake\share\cmake-3.13\Modules\DartConfiguration.tcl.in;D:\tools\CMake\share\cmake-3.13\Modules\FindDoxygen.cmake;D:\tools\CMake\share\cmake-3.13\Modules\FindPackageHandleStandardArgs.cmake;D:\tools\CMake\share\cmake-3.13\Modules\FindPackageMessage.cmake;D:\tools\CMake\share\cmake-3.13\Modules\GNUInstallDirs.cmake;D:\tools\CMake\share\cmake-3.13\Modules\Platform\Windows-MSVC-C.cmake;D:\tools\CMake\share\cmake-3.13\Modules\Platform\Windows-MSVC-CXX.cmake;D:\tools\CMake\share\cmake-3.13\Modules\Platform\Windows-MSVC.cmake;D:\tools\CMake\share\cmake-3.13\Modules\Platform\Windows.cmake;D:\tools\CMake\share\cmake-3.13\Modules\Platform\WindowsPaths.cmake;D:\tools\CMake\share\cmake-3.13\Modules\TestBigEndian.cmake;D:\tools\CMake\share\cmake-3.13\Modules\WriteBasicConfigVersionFile.cmake;D:\tools\CMake\share\cmake-3.13\Templates\CPackConfig.cmake.in;E:\workspace\funra\proj\vs2017\3rd\CMakeFiles\3.13.4\CMakeCCompiler.cmake;E:\workspace\funra\proj\vs2017\3rd\CMakeFiles\3.13.4\CMakeCXXCompiler.cmake;E:\workspace\funra\proj\vs2017\3rd\CMakeFiles\3.13.4\CMakeRCCompiler.cmake;E:\workspace\funra\proj\vs2017\3rd\CMakeFiles\3.13.4\CMakeSystem.cmake;E:\workspace\funra\source\3rd\CMakeLists.txt;E:\workspace\funra\source\3rd\cmocka\CMakeLists.txt;E:\workspace\funra\source\3rd\cmocka\CPackConfig.cmake;E:\workspace\funra\source\3rd\cmocka\CTestConfig.cmake;E:\workspace\funra\source\3rd\cmocka\CompilerChecks.cmake;E:\workspace\funra\source\3rd\cmocka\ConfigureChecks.cmake;E:\workspace\funra\source\3rd\cmocka\DefineOptions.cmake;E:\workspace\funra\source\3rd\cmocka\cmake\Modules\AddCCompilerFlag.cmake;E:\workspace\funra\source\3rd\cmocka\cmake\Modules\AddCMockaTest.cmake;E:\workspace\funra\source\3rd\cmocka\cmake\Modules\CheckCCompilerFlagSSP.cmake;E:\workspace\funra\source\3rd\cmocka\cmake\Modules\DefineCMakeDefaults.cmake;E:\workspace\funra\source\3rd\cmocka\cmake\Modules\DefineCompilerFlags.cmake;E:\workspace\funra\source\3rd\cmocka\cmake\Modules\DefinePlatformDefaults.cmake;E:\workspace\funra\source\3rd\cmocka\cmake\Modules\FindNSIS.cmake;E:\workspace\funra\source\3rd\cmocka\cmake\Modules\MacroEnsureOutOfSourceBuild.cmake;E:\workspace\funra\source\3rd\cmocka\cmocka.pc.cmake;E:\workspace\funra\source\3rd\cmocka\config.h.cmake;E:\workspace\funra\source\3rd\cmocka\doc\CMakeLists.txt;E:\workspace\funra\source\3rd\cmocka\example\CMakeLists.txt;E:\workspace\funra\source\3rd\cmocka\include\CMakeLists.txt;E:\workspace\funra\source\3rd\cmocka\src\CMakeLists.txt;E:\workspace\funra\source\3rd\libuv\1.42.0\CMakeLists.txt;E:\workspace\funra\source\3rd\lua\5.4.3\CMakeLists.txt;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\workspace\funra\proj\vs2017\3rd\CMakeFiles\generate.stamp;E:\workspace\funra\proj\vs2017\3rd\libuv\1.42.0\CMakeFiles\generate.stamp;E:\workspace\funra\proj\vs2017\3rd\lua\5.4.3\CMakeFiles\generate.stamp;E:\workspace\funra\proj\vs2017\3rd\cmocka\CMakeFiles\generate.stamp;E:\workspace\funra\proj\vs2017\3rd\cmocka\include\CMakeFiles\generate.stamp;E:\workspace\funra\proj\vs2017\3rd\cmocka\src\CMakeFiles\generate.stamp;E:\workspace\funra\proj\vs2017\3rd\cmocka\doc\CMakeFiles\generate.stamp;E:\workspace\funra\proj\vs2017\3rd\cmocka\example\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Checking Build System</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
D:\tools\CMake\bin\cmake.exe -SE:/workspace/funra/source/3rd -BE:/workspace/funra/proj/vs2017/3rd --check-stamp-list CMakeFiles/generate.stamp.list --vs-solution-file E:/workspace/funra/proj/vs2017/3rd/3rd.sln
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:/workspace/funra/proj/vs2017/3rd/CMakeFiles/2fb5f0f32b10b147786cc3fce07cc727/generate.stamp.rule;D:\tools\CMake\share\cmake-3.13\Modules\BasicConfigVersion-AnyNewerVersion.cmake.in;D:\tools\CMake\share\cmake-3.13\Modules\CMakeCInformation.cmake;D:\tools\CMake\share\cmake-3.13\Modules\CMakeCXXInformation.cmake;D:\tools\CMake\share\cmake-3.13\Modules\CMakeCheckCompilerFlagCommonPatterns.cmake;D:\tools\CMake\share\cmake-3.13\Modules\CMakeCommonLanguageInclude.cmake;D:\tools\CMake\share\cmake-3.13\Modules\CMakeDependentOption.cmake;D:\tools\CMake\share\cmake-3.13\Modules\CMakeGenericSystem.cmake;D:\tools\CMake\share\cmake-3.13\Modules\CMakeInitializeConfigs.cmake;D:\tools\CMake\share\cmake-3.13\Modules\CMakeLanguageInformation.cmake;D:\tools\CMake\share\cmake-3.13\Modules\CMakePackageConfigHelpers.cmake;D:\tools\CMake\share\cmake-3.13\Modules\CMakeRCInformation.cmake;D:\tools\CMake\share\cmake-3.13\Modules\CMakeSystemSpecificInformation.cmake;D:\tools\CMake\share\cmake-3.13\Modules\CMakeSystemSpecificInitialize.cmake;D:\tools\CMake\share\cmake-3.13\Modules\CPack.cmake;D:\tools\CMake\share\cmake-3.13\Modules\CPackComponent.cmake;D:\tools\CMake\share\cmake-3.13\Modules\CTest.cmake;D:\tools\CMake\share\cmake-3.13\Modules\CTestTargets.cmake;D:\tools\CMake\share\cmake-3.13\Modules\CTestUseLaunchers.cmake;D:\tools\CMake\share\cmake-3.13\Modules\CheckCCompilerFlag.cmake;D:\tools\CMake\share\cmake-3.13\Modules\CheckCSourceCompiles.cmake;D:\tools\CMake\share\cmake-3.13\Modules\CheckCXXSourceCompiles.cmake;D:\tools\CMake\share\cmake-3.13\Modules\CheckFunctionExists.cmake;D:\tools\CMake\share\cmake-3.13\Modules\CheckIncludeFile.cmake;D:\tools\CMake\share\cmake-3.13\Modules\CheckIncludeFileCXX.cmake;D:\tools\CMake\share\cmake-3.13\Modules\CheckLibraryExists.cmake;D:\tools\CMake\share\cmake-3.13\Modules\CheckStructHasMember.cmake;D:\tools\CMake\share\cmake-3.13\Modules\CheckSymbolExists.cmake;D:\tools\CMake\share\cmake-3.13\Modules\CheckTypeSize.cmake;D:\tools\CMake\share\cmake-3.13\Modules\Compiler\CMakeCommonCompilerMacros.cmake;D:\tools\CMake\share\cmake-3.13\Modules\Compiler\MSVC-C.cmake;D:\tools\CMake\share\cmake-3.13\Modules\Compiler\MSVC-CXX.cmake;D:\tools\CMake\share\cmake-3.13\Modules\DartConfiguration.tcl.in;D:\tools\CMake\share\cmake-3.13\Modules\FindDoxygen.cmake;D:\tools\CMake\share\cmake-3.13\Modules\FindPackageHandleStandardArgs.cmake;D:\tools\CMake\share\cmake-3.13\Modules\FindPackageMessage.cmake;D:\tools\CMake\share\cmake-3.13\Modules\GNUInstallDirs.cmake;D:\tools\CMake\share\cmake-3.13\Modules\Platform\Windows-MSVC-C.cmake;D:\tools\CMake\share\cmake-3.13\Modules\Platform\Windows-MSVC-CXX.cmake;D:\tools\CMake\share\cmake-3.13\Modules\Platform\Windows-MSVC.cmake;D:\tools\CMake\share\cmake-3.13\Modules\Platform\Windows.cmake;D:\tools\CMake\share\cmake-3.13\Modules\Platform\WindowsPaths.cmake;D:\tools\CMake\share\cmake-3.13\Modules\TestBigEndian.cmake;D:\tools\CMake\share\cmake-3.13\Modules\WriteBasicConfigVersionFile.cmake;D:\tools\CMake\share\cmake-3.13\Templates\CPackConfig.cmake.in;E:\workspace\funra\proj\vs2017\3rd\CMakeFiles\3.13.4\CMakeCCompiler.cmake;E:\workspace\funra\proj\vs2017\3rd\CMakeFiles\3.13.4\CMakeCXXCompiler.cmake;E:\workspace\funra\proj\vs2017\3rd\CMakeFiles\3.13.4\CMakeRCCompiler.cmake;E:\workspace\funra\proj\vs2017\3rd\CMakeFiles\3.13.4\CMakeSystem.cmake;E:\workspace\funra\source\3rd\CMakeLists.txt;E:\workspace\funra\source\3rd\cmocka\CMakeLists.txt;E:\workspace\funra\source\3rd\cmocka\CPackConfig.cmake;E:\workspace\funra\source\3rd\cmocka\CTestConfig.cmake;E:\workspace\funra\source\3rd\cmocka\CompilerChecks.cmake;E:\workspace\funra\source\3rd\cmocka\ConfigureChecks.cmake;E:\workspace\funra\source\3rd\cmocka\DefineOptions.cmake;E:\workspace\funra\source\3rd\cmocka\cmake\Modules\AddCCompilerFlag.cmake;E:\workspace\funra\source\3rd\cmocka\cmake\Modules\AddCMockaTest.cmake;E:\workspace\funra\source\3rd\cmocka\cmake\Modules\CheckCCompilerFlagSSP.cmake;E:\workspace\funra\source\3rd\cmocka\cmake\Modules\DefineCMakeDefaults.cmake;E:\workspace\funra\source\3rd\cmocka\cmake\Modules\DefineCompilerFlags.cmake;E:\workspace\funra\source\3rd\cmocka\cmake\Modules\DefinePlatformDefaults.cmake;E:\workspace\funra\source\3rd\cmocka\cmake\Modules\FindNSIS.cmake;E:\workspace\funra\source\3rd\cmocka\cmake\Modules\MacroEnsureOutOfSourceBuild.cmake;E:\workspace\funra\source\3rd\cmocka\cmocka.pc.cmake;E:\workspace\funra\source\3rd\cmocka\config.h.cmake;E:\workspace\funra\source\3rd\cmocka\doc\CMakeLists.txt;E:\workspace\funra\source\3rd\cmocka\example\CMakeLists.txt;E:\workspace\funra\source\3rd\cmocka\include\CMakeLists.txt;E:\workspace\funra\source\3rd\cmocka\src\CMakeLists.txt;E:\workspace\funra\source\3rd\libuv\1.42.0\CMakeLists.txt;E:\workspace\funra\source\3rd\lua\5.4.3\CMakeLists.txt;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\workspace\funra\proj\vs2017\3rd\CMakeFiles\generate.stamp;E:\workspace\funra\proj\vs2017\3rd\libuv\1.42.0\CMakeFiles\generate.stamp;E:\workspace\funra\proj\vs2017\3rd\lua\5.4.3\CMakeFiles\generate.stamp;E:\workspace\funra\proj\vs2017\3rd\cmocka\CMakeFiles\generate.stamp;E:\workspace\funra\proj\vs2017\3rd\cmocka\include\CMakeFiles\generate.stamp;E:\workspace\funra\proj\vs2017\3rd\cmocka\src\CMakeFiles\generate.stamp;E:\workspace\funra\proj\vs2017\3rd\cmocka\doc\CMakeFiles\generate.stamp;E:\workspace\funra\proj\vs2017\3rd\cmocka\example\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
  </ItemGroup>
  <ItemGroup>
  </ItemGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
  </ImportGroup>
</Project>