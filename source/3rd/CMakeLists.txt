CMAKE_MINIMUM_REQUIRED(VERSION 3.10)

SET(CMAKE_C_STANDARD 99)

SET(CMAKE_DEBUG_POSTFIX "d" CACHE STRING "Set debug librbased postfix" FORCE)
SET(CMAKE_RELEASE_POSTFIX "" CACHE STRING "Set release librbase postfix" FORCE)

PROJECT(3rd)

SET(R3RD_SOURCE_ROOT ${PROJECT_SOURCE_DIR})

# 64位
IF (CMAKE_CL_64)
    MESSAGE(STATUS "Arch type is 64.")
    SET(ARCH_TYPE 64)
# 32
ELSE()
    MESSAGE(STATUS "Arch type is 32.")
    SET(ARCH_TYPE 32)
ENDIF()

IF (CMAKE_HOST_SYSTEM_NAME STREQUAL "Windows")
    SET(PROJECT_DEFINES "-DWIN32 -DOS_WIN -D_CRT_SECURE_NO_WARNINGS")
    SET(DIR_PLATFORM Win_x${ARCH_TYPE})
ELSEIF(CMAKE_HOST_SYSTEM_NAME STREQUAL "Linux")
    SET(PROJECT_DEFINES "-DOS_LINUX -D_OS_LINUX")
    SET(DIR_PLATFORM Linux_x86_${ARCH_TYPE})
    SET(PROJECT_LINK_OPTIONS
        #-ljemalloc 
        -lm -lstdc++ -pthread -ldl
        -static-libgcc
        -static-libstdc++
    )
ELSE()
    MESSAGE(FATAL_ERROR "This operating system is not supported: ${CMAKE_HOST_SYSTEM_NAME}")
    SET(DIR_PLATFORM Others)
ENDIF()

ADD_DEFINITIONS(${PROJECT_DEFINES})
ADD_LINK_OPTIONS(${PROJECT_LINK_OPTIONS})

SET(R3RD_LIB_ROOT ${PROJECT_SOURCE_DIR}/../../build/lib/${DIR_PLATFORM}/3rd)
SET(R3RD_BINARY_ROOT ${PROJECT_SOURCE_DIR}/../../build/bin/${DIR_PLATFORM})

# 指定可执行程序输出目录
SET(CMAKE_RUNTIME_OUTPUT_DIRECTORY_DEBUG    ${R3RD_BINARY_ROOT})
SET(CMAKE_RUNTIME_OUTPUT_DIRECTORY_RELEASE  ${R3RD_BINARY_ROOT})
SET(CMAKE_RUNTIME_OUTPUT_DIRECTORY          ${R3RD_BINARY_ROOT})

# 指定 库文件输出目录
SET(CMAKE_ARCHIVE_OUTPUT_DIRECTORY_DEBUG    ${R3RD_LIB_ROOT})
SET(CMAKE_ARCHIVE_OUTPUT_DIRECTORY_RLEASE   ${R3RD_LIB_ROOT})
SET(CMAKE_ARCHIVE_OUTPUT_DIRECTORY          ${R3RD_LIB_ROOT})
SET(CMAKE_LIBRARY_OUTPUT_DIRECTORY          ${R3RD_LIB_ROOT})

ADD_SUBDIRECTORY(libuv/1.42.0)
ADD_SUBDIRECTORY(lua/5.4.3)
ADD_SUBDIRECTORY(cmocka)
